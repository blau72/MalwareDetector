using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace MalwareDetector
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            this.primeTheme1.Text = "MalwareDetector by Blau - " + Application.ProductVersion;
        }

        private void btnClose_Click_1(object sender, EventArgs e)
        {
            System.Environment.Exit(0);
        }

        private void btnBuscar_Click(object sender, EventArgs e)
        {
            btnDetectar.Enabled = false;
            OpenFileDialog openFileDialog1 = new OpenFileDialog();

            openFileDialog1.Filter = "Ejecutables (.exe)|*.exe";
            openFileDialog1.FilterIndex = 1;
            openFileDialog1.Multiselect = false;
            DialogResult result = openFileDialog1.ShowDialog();
            if (result == DialogResult.OK)
            {
                txtArchivo.Text = openFileDialog1.FileName;
                btnDetectar.Enabled = true;
            }
        }

        private void btnContacto_Click(object sender, EventArgs e)
        {
            System.Diagnostics.Process.Start("https://indetectables.net/memberlist.php?mode=viewprofile&u=58117");
        }

        private void tblMalwares_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)
        {
            foreach (DataGridViewRow Myrow in tblMalwares.Rows)
            {
                if (Myrow.Cells[1].Value.ToString().ToLower().Equals("no"))
                {
                    Myrow.DefaultCellStyle.BackColor = Color.GhostWhite;
                }
                else
                {
                    Myrow.DefaultCellStyle.BackColor = Color.LightSteelBlue;
                }
            }
        }

        private void tblMalwares_SelectionChanged(object sender, EventArgs e)
        {
            tblMalwares.ClearSelection();
        }

        private void btnDetectar_Click(object sender, EventArgs e)
        {
            tblMalwares.Rows.Clear();
            if (!Directory.Exists("plugins")) { MessageBox.Show("No existe la carpeta 'plugins'."); return; }

            string[] plugins = Directory.GetFiles("plugins", "*.dll");
            if (plugins.Length < 1) { MessageBox.Show("No hay archivos dentro de la carpeta 'plugins'."); return; }
            foreach(string plugin in plugins)
            {
                Console.WriteLine(plugin);
                var pluginDLL = Assembly.LoadFile(System.Environment.CurrentDirectory + "\\" + plugin);
                foreach (Type type in pluginDLL.GetExportedTypes())
                {
                    try
                    {
                        dynamic c = Activator.CreateInstance(type);
                        string malwareName = c.malwareName();
                        string authorName = c.authorName();
                        bool check = c.Check(txtArchivo.Text);
                        string checkStr = (check) ? "Sí" : "No";
                        tblMalwares.Rows.Add(malwareName, checkStr, authorName);
                    }
                    catch (Exception ex) { }
                }
            }
        }
    }
}
